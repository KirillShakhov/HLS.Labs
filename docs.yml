openapi: "3.0.3"
info:
  title: "hps_lab API"
  description: "hps_lab API"
  version: "1.0.0"
servers:
  - url: "https://hps_lab"
paths:
  /api/v1/auth/login:
    post:
      summary: "POST api/v1/auth/login"
      operationId: "login"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialsDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenDto"
  /api/v1/auth/refresh:
    post:
      summary: "POST api/v1/auth/refresh"
      operationId: "refresh"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenDto"
  /api/v1/auth/token:
    post:
      summary: "POST api/v1/auth/token"
      operationId: "token"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenDto"
  /api/v1/auth/validateToken:
    post:
      summary: "POST api/v1/auth/validateToken"
      operationId: "validateToken"
      parameters:
        - name: "token"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "boolean"
  /api/v1/users/add:
    post:
      summary: "POST api/v1/users/add"
      operationId: "registerNewUser"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/v1/users/change-role:
    post:
      summary: "POST api/v1/users/change-role"
      operationId: "changeRole"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/v1/users/page/{number}:
    get:
      summary: "GET api/v1/users/page/{number}"
      operationId: "getAllUsers"
      parameters:
        - name: "number"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDto"
  /api/v1/categories/create:
    post:
      summary: "POST api/v1/categories/create"
      operationId: "addCategory"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDto"
  /api/v1/categories/get:
    get:
      summary: "GET api/v1/categories/get"
      operationId: "listProduct"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDto"
  /api/v1/orders/create:
    post:
      summary: "POST api/v1/orders/create"
      operationId: "addOrder"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDto"
  /api/v1/orders/get:
    get:
      summary: "GET api/v1/orders/get"
      operationId: "listOrders"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDto"
  /api/v1/products/create:
    post:
      summary: "POST api/v1/products/create"
      operationId: "addProduct"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"
  /api/v1/products/get:
    get:
      summary: "GET api/v1/products/get"
      operationId: "getProducts"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDto"
  /api/v1/chats/create:
    post:
      summary: "POST api/v1/chats/create"
      operationId: "createChat"
      parameters:
        - name: "title"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChatDto"
  /api/v1/chats/get:
    get:
      summary: "GET api/v1/chats/get"
      operationId: "getChats"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ChatDto"
  /api/v1/chats/get/{id}:
    get:
      summary: "GET api/v1/chats/get/{id}"
      operationId: "getChatsById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChatDto"
  /api/v1/chats/send/{id}:
    post:
      summary: "POST api/v1/chats/send/{id}"
      operationId: "sendById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "text"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChatDto"
  /api/v1/attachment/create:
    get:
      summary: "GET api/v1/attachment/create"
      operationId: "getAttachmentById"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AttachmentDto"
    post:
      summary: "POST api/v1/attachment/create"
      operationId: "createAttachment"
      parameters:
        - name: "base64"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "type"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AttachmentDto"
  /api/v1/attachment/get:
    get:
      summary: "GET api/v1/attachment/get"
      operationId: "getAttachment"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AttachmentDto"
  /api/v1/attachment/get/{id}:
    get:
      summary: "GET api/v1/attachment/get/{id}"
      operationId: "getAttachment"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AttachmentDto"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CredentialsDto:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
    TokenDto:
      type: "object"
      properties:
        accessToken:
          type: "string"
        refreshToken:
          type: "string"
    CategoryDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
    Object:
      type: "object"
      properties: { }
    PageDto:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/Object"
        hasMore:
          type: "boolean"
    ProductDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        category:
          type: "string"
        description:
          type: "string"
        attachment:
          type: "array"
          items:
            type: "integer"
            format: "int64"
    MessageDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        message:
          type: "string"
        date:
          type: "string"
    ChatDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        adminUser:
          type: "string"
        users:
          type: "array"
          items:
            type: "string"
        messages:
          type: "array"
          items:
            $ref: "#/components/schemas/MessageDto"
    AttachmentDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        base64:
          type: "string"
        type:
          type: "string"
          enum:
            - "PHOTO"
            - "GIF"
            - "AUDIO"
        createDate:
          type: "string"
    UserDto:
      type: "object"
      properties:
        firstName:
          type: "string"
        secondName:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
security:
  - bearerAuth: []